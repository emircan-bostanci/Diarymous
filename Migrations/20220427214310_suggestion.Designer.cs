// <auto-generated />
using System;
using Diarymous.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Diarymous.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220427214310_suggestion")]
    partial class suggestion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Diarymous.Models.Entities.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Diarymous.Models.Entities.Diary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accountid")
                        .HasColumnType("int");

                    b.Property<int?>("authorid")
                        .HasColumnType("int");

                    b.Property<string>("diaryText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipAdrr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrivate")
                        .HasColumnType("bit");

                    b.Property<int>("likeCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("publishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Accountid");

                    b.HasIndex("authorid");

                    b.ToTable("diaries");
                });

            modelBuilder.Entity("Diarymous.Models.Entities.Suggestion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("suggestionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("suggestionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("suggestions");
                });

            modelBuilder.Entity("Diarymous.Models.Entities.Diary", b =>
                {
                    b.HasOne("Diarymous.Models.Entities.Account", null)
                        .WithMany("likedPosts")
                        .HasForeignKey("Accountid");

                    b.HasOne("Diarymous.Models.Entities.Account", "author")
                        .WithMany("diaries")
                        .HasForeignKey("authorid");

                    b.Navigation("author");
                });

            modelBuilder.Entity("Diarymous.Models.Entities.Account", b =>
                {
                    b.Navigation("diaries");

                    b.Navigation("likedPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
